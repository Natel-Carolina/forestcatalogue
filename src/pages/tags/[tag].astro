---
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "@layouts/Layout.astro";
import PostCard from "@components/PostCard.astro";
import PageTitle from "@components/PageTitle.astro";

interface Props {
  posts: Array<
    CollectionEntry<"datasets" | "models" | "other-resources" | "tools">
  >;
}

export async function getStaticPaths() {
  const allDatasets = await getCollection("datasets");
  const allModels = await getCollection("models");
  const allResources = await getCollection("other-resources");
  const allTools = await getCollection("tools");
  const allPosts = [...allDatasets, ...allModels, ...allResources, ...allTools];

  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.data.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.tags.includes(tag),
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<Layout title={tag || "no tags found"}>
  <PageTitle>
    Posts tagged with <span class="bg-sushi-950 text-sushi-50 px-2">{tag}</span>
  </PageTitle>
  <ul class="flex flex-col gap-4 mt-8 mx-auto max-w-[800px]">
    {
      posts.map((post) => (
        <li class="flex-col flex gap-4 rounded shadow p-4 bg-sushi-200">
          <a
            href={`./${post.collection}/${post.slug}`}
            class="text-xl font-bold"
          >
            {post.data.title}
          </a>
          <PostCard frontmatter={post.data} />
        </li>
      ))
    }
  </ul>
</Layout>
